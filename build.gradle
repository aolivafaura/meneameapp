buildscript {
    ext.kotlin_version = '1.2.41'
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.google.gms:google-services:3.1.2'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://dl.bintray.com/ekito/koin" }
    }
}

def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
def versionDev = 1

ext {
    compileSdkVersion = 27
    minSdkVersion = 21
    targetSdkVersion = 27
    versionCode = versionMajor * 100000 + versionMinor * 1000 + versionPatch + 100 * versionDev
    versionName = "${versionMajor}.${versionMinor}.${versionPatch}${if (versionDev != 0) ".$versionDev" else ""}"
    applicationId = "es.mnmapp.aolv.meneame"
    gitBranch = "git name-rev --name-only HEAD".execute([], project.rootDir).text.trim().replace("remotes/origin/", "")
    gitSHA = "git rev-parse --short HEAD".execute([], project.rootDir).text.trim()
    gitTagMessage = "git tag -n10 | grep `git describe --tags --abbrev=0`".execute([], project.rootDir).text.trim()
}

configurations {
    devDebugCompile
    prodMinifiedDebugCompile
    prodReleaseCompile
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
