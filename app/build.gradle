apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply from: 'props.gradle'

android {

    signingConfigs {
        release {
            keyAlias prodKeyStoreAlias
            keyPassword prodKeyStoreKeyPass
            storeFile file('../mnmaolvdprod.keystore')
            storePassword prodKeyStorePass
        }
    }

    compileSdkVersion 27
    defaultConfig {
        applicationId "es.mnmapp.aolv.meneame"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "es.mnmapp.aolv.meneame.TestRunner"
        vectorDrawables.useSupportLibrary = true

        manifestPlaceholders = [
                fabricApiKey: fabricApiKey
        ]
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            ext.enableCrashlytics = false
        }
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            dimension "default"
            versionNameSuffix "-dvlp"
            applicationIdSuffix '.dvlp'
        }

        prod {
            dimension "default"
        }
    }

    // Exclude useless variants
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'dev') {
            variant.setIgnore(true)
        }
    }
}

kapt {
    generateStubs = true
}

ext {
    firebaseVersion = '11.8.0'
    supportVersion = '27.0.2'
    constraintLayoutVersion = '1.0.2'
    rxAndroidVersion = '2.0.1'
    rxJavaVersion = '2.1.7'
    daggerVersion = '2.11'
    jsrVersion = '1.0'
    leakCanaryVersion = '1.5.1'
    timberVersion = '4.5.1'
    architectureComponentsVersion = '1.1.0'
    stethoVersion = '1.5.0'
    okhttpVersion = '3.9.1'
    glideVersion = '4.4.0'
    junitVersion = '4.12'
    espressoVersion = '2.2.2'
}

dependencies {
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    implementation project(path: ':data')
    implementation project(path: ':domain')
    implementation project(path: ':omfm-release')

    releaseCompile "com.google.firebase:firebase-core:$firebaseVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:support-vector-drawable:$supportVersion"
    compileOnly "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compileOnly "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    provided "javax.annotation:jsr250-api:$jsrVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation "android.arch.lifecycle:runtime:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:extensions:$architectureComponentsVersion"
    kapt "android.arch.lifecycle:compiler:$architectureComponentsVersion"

    debugCompile "com.facebook.stetho:stetho:$stethoVersion"
    debugCompile("com.facebook.stetho:stetho-okhttp3:$stethoVersion") {
        exclude group: "com.squareup.okhttp3"
    }
    compileOnly "com.squareup.okhttp3:okhttp:$okhttpVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: "com.android.support", module: "support-annotations"
    })
}

apply plugin: 'com.google.gms.google-services'