apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: '../config/dependencies.gradle'
apply from: '../ktlint.gradle'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName rootProject.versionName
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        minifiedDebug{
            initWith(release)
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    // Modules
    implementation project(path: ':domain')
    implementation project(path: ':logger')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Network
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        exclude group: "com.squareup.okhttp3"
    }
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    api "com.squareup.okhttp3:okhttp:$okhttpVersion"

    // Firestore
    api "com.google.firebase:firebase-firestore:$firebaseVersion"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // Room
    api "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    api "android.arch.persistence.room:rxjava2:$roomVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion"

    // Production code android testing
    api "com.android.support.test.espresso:espresso-idling-resource:$espressoSupportVersion"
}
